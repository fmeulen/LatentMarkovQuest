max(9
min(-1,3)
max(5,9,4)
round(3.14159265, digits=2)
?dplyr
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>%
ggplot(aes(x=height,y=mass,colour=gender)) +
geom_point()
starwars %>%
ggplot(aes(x=height,y=mass)) +
geom_point(colour="red")
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(tidyverse)
library(tidyverse)
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(tidyverse)
library(tidyverse)
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
library(tidyverse)
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
library(knitr)
opts_chunk$set(warning=FALSE)   # do not show warnings
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>%
ggplot(aes(x=height,y=mass)) +
geom_point(colour="red")
starwars %>%
filter(mass<1000) %>%
ggplot(aes(x=height,y=mass))  +
geom_point(aes(shape=gender)) +
geom_smooth(method="lm", se=FALSE) +
labs(title="Starwars data")
starwars %>% ggplot() + geom_histogram(aes(x=height))
p <- starwars %>% select(name, mass, height,sex) %>%
mutate(bmi=mass/(height/100)^2) %>%
drop_na() %>%
filter(bmi<100) %>%
ggplot() +
geom_point(aes(x=bmi, y=name, colour=sex)) +
labs(title="Body Mass Index for starwars", subtitle="Revision of original data from SWAPI, the Star Wars API.")
p
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
starwars %>% ggplot(aes(x=height,y=mass)) + geom_point()
starwars %>%
filter(mass<1000) %>%
ggplot(aes(x=height,y=mass,shape=gender)) +
geom_point()
starwars %>%
ggplot(aes(x=height,y=mass)) +
geom_point(colour="red")
library(tidyverse)
library(tidyverse)
starwars %>% select(1:4) %>% glimpse()
glimpse(starwars[,1:4])
glimpse(starwars[,1:4])
sin(cos(sqrt(abs(3))))
sin(cos(sqrt(abs(3))))
d %>% filter(str_detect(name, "R"))
knitr::opts_chunk$set(warning = FALSE, message = FALSE) # suppress warnings
fosdata::ecars %>%
filter(chargeTimeHrs < 24) %>%
ggplot(aes(x = chargeTimeHrs, y = kwhTotal, color = (dollars))) +
geom_point() +
scale_color_gradient(low = "white", high = "red") +
labs(title = "Cost of a charge depends only on charging time")
mytheme = theme_bw()
theme_set(mytheme)
fosdata::ecars %>%
filter(chargeTimeHrs < 24) %>%
ggplot(aes(x = chargeTimeHrs, y = kwhTotal, color = (dollars))) +
geom_point() +
scale_color_gradient(low = "white", high = "red") +
labs(title = "Cost of a charge depends only on charging time")
library(tidyverse)
sin(cos(sqrt(abs(3))))
y <- 4
Dataset_Pretland %>% filter(`Week/weekend`=="Weekday", `Welcome team`=="Yes") %>%
select('Nr',`Week/weekend`, `Welcome team`)
Elab_Queues <- Dataset_Pretland %>% select(Nr, Date,
`Day of the week`, `Week/weekend`,
`School vacation`, `Staff presence`,
Queue, `Unavailability rides`)
3 %>% abs() %>% sqrt() %>% cos() %>% sin()
y <- 4
y <- 4
y <- 4
y <- 4
y <- 4
y <- 4
y
d <- Dataset_Pretland
source("dsp1.R")
library(tidyverse)
library(readxl)
Dataset_Pretland <- read_excel("Dataset Pretland.xlsx",
col_types = c("text", "date", "text",
"text", "text", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "text"))
view(Dataset_Pretland)
Dataset_Pretland %>% view()
3 %>% abs() %>% sqrt() %>% cos() %>% sin()
rm(list=ls())
library(readxl)
Dataset_Pretland <- read_excel(".julia/dev/training-bigdata/Dataset Pretland.xlsx")
View(Dataset_Pretland)
Dataset_Pretland
Dataset_Pretland %>% filter(str_detect(Nr, "1"))
library(tidyverse)
Dataset_Pretland %>% filter(str_detect(Nr, "1"))
Dataset_Pretland %>% slice_max(`Avg. Customer satisfaction`)
?slice_max
Dataset_Pretland %>% slice_max(`Avg. Customer satisfaction`, n=5)
Dataset_Pretland %>% slice_max(`Avg. Customer satisfaction`, n=3)
Elab_HPark_highlow <- Dataset_Pretland %>%
arrange(desc(`Hygiene park`)) %>%
select (Nr, `Day of the week`, `Hygiene park`, `Hygiene toilets`)
view(Elab_HPark_highlow)
Elab_HToilet_lowhigh <- Dataset_Pretland %>% arrange(`Hygiene park`, `Hygiene toilets`) %>%
select (Nr, `Day of the week`, `Hygiene park`, `Hygiene toilets`)
view(Elab_HToilet_lowhigh)
Elab_HToilet_lowhigh <- Dataset_Pretland %>%
arrange(desc(`Hygiene park`), desc(`Hygiene toilets`)) %>%
select (Nr, `Day of the week`, `Hygiene park`, `Hygiene toilets`)
view(Elab_HToilet_lowhigh)
Elab_HToilet_lowhigh %>% ggplot(aes(x=`Hygiene park`, y = `Hygiene toilets`)) + geom_point()
Elab_HToilet_lowhigh %>% ggplot(aes(colour='Day of the week`, x=`Hygiene park`, y = `Hygiene toilets`)) + geom_point()
Elab_HToilet_lowhigh %>% ggplot(aes(color='Day of the week`, x=`Hygiene park`, y = `Hygiene toilets`)) + geom_point()
Dataset_Pretland <- read_excel("Dataset Pretland.xlsx",
col_types = c("text", "date", "text",
"text", "text", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "text"))
library(readxl)
library(readxl)
read_excel("Dataset Pretland.xlsx",
col_types = c("text", "date", "text",
"text", "text", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "text"))
Dataset_Pretland <- read_excel("Dataset Pretland.xlsx",
col_types = c("text", "date", "text",
"text", "text", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "text"))
view(Dataset_Pretland)
d %>%
arrange(desc(`Hygiene toilets`)) %>%
select (Nr, `Day of the week`, `Hygiene park`, `Hygiene toilets`) %>%
view()
d <- Dataset_Pretland
d %>%
arrange(desc(`Hygiene toilets`)) %>%
select (Nr, `Day of the week`, `Hygiene park`, `Hygiene toilets`) %>%
view()
Survey_review %>%
filter(min(`Avg. Customer satisfaction RP (%)`,`Hygiene Park RP (%)`,`Hygiene Toilets RP (%)`)   <70)
library(readxl)
Survey_review <- read_excel("Dataset Pretland.xlsx",
sheet = "Survey Reviews",
col_types = c("date", "numeric", "numeric", "numeric"))
Survey_review %>%
filter(min(`Avg. Customer satisfaction RP (%)`,`Hygiene Park RP (%)`,`Hygiene Toilets RP (%)`)   <70)
Survey_review %>%
filter(pmin(`Avg. Customer satisfaction RP (%)`,`Hygiene Park RP (%)`,`Hygiene Toilets RP (%)`)   <70)
?pmin
d_NEW <- anti_join(d, Overview_review)
d %>% unique()#group_by(Weather) %>% summarise()
d %>% select(Weather) %>% unique()#group_by(Weather) %>% summarise()
Temperature <- read_excel("Dataset Pretland.xlsx",
sheet = "Temperature",
col_types = c("date", "numeric", "numeric", "numeric"))
d_v2 <- left_join(d, Temperature, by= "Date")
view(d_v2)
?slide_na
?na_count
?count_na
d_v2 %>% filter(is.na(`Avg. Temperature`))
library(readxl)
survey_review <- read_excel("Dataset Pretland.xlsx",
sheet = "Survey Reviews",
col_types = c("date", "numeric", "numeric", "numeric"))
glimpse(Survey_review)
sr_below70 <- survey_review %>%
filter(pmin(`Avg. Customer satisfaction RP (%)`,`Hygiene Park RP (%)`,`Hygiene Toilets RP (%)`)   <70)
d_NEW <- anti_join(d, sr_below70)
glimpse(d_NEW)
survey_review %>%
filter(pmin(`Avg. Customer satisfaction RP (%)`,`Hygiene Park RP (%)`,`Hygiene Toilets RP (%)`)   <70)
sr_below70 %>% slice_head %>% view()
sr_below70 %>% slice_head
?slice_head
sr_below70
sr_below70 %>% view()
sr_below70 %>% glimpse()
anti_join(d, sr_below70) %>% glimpse()
extra_data <- read_excel("Dataset Pretland.xlsx",
sheet = "Extra data",
col_types = c("text", "date", "text", "text", "text", "numeric", "numeric", "text",
"numeric", "text", "numeric", "numeric", "numeric", "text"))
intersect(d, extra_data)
bind_rows(d, extra_data) %>% distinct()
bind_rows(d, extra_data) %>% distinct() %>% count()
union(d, extra_data)
setdiff(d, extra_data)
library(readxl)
Food <- read_excel("Dataset Pretland.xlsx",
sheet = "Food", col_types = c("numeric",
"date", "text", "date", "text", "date",
"text", "date", "text", "date", "text",
"date", "text", "date", "text"))
food <- read_excel("Dataset Pretland.xlsx",
sheet = "Food", col_types = c("numeric",
"date", "text", "date", "text", "date",
"text", "date", "text", "date", "text",
"date", "text", "date", "text"))
glimpse(food)
str(food)
view(food)
# First idea:
food_v2 <- food %>%
pivot_longer(cols = c(`Mo`,`Tu`,`We`,`Th`,`Fr`,`Sa`,`Su`),
names_to = "Weekday",
values_to = "Sold_food")
food_v2
# Solution: first couple weekday and date
food_v3 <- food %>% unite("Monday", `Date Mo`, Mo) %>%
unite("Tuesday", `Date Tu`, Tu) %>%
unite("Wednesday", `Date We`, We)  %>%
unite("Thursday", `Date Th`, Th)  %>%
unite("Friday", `Date Fr`, Fr)  %>%
unite("Saturday", `Date Sa`, Sa)  %>%
unite("Sunday", `Date Su`, Su)
# Reshape dataset into tidy format
food_v4 <- food_v3 %>% pivot_longer(cols=2:8,
names_to="Weekday",
values_to="Date_Productsold")
# Separate column "Date_Productsold" into "Date" & "Productsold"
food_v5 <- food_v4 %>% separate(col=Date_Productsold,
into=c("Date", "Productsold"),
sep="_")
# Mutate column "Date" as date:
food_v6 <- food_v5 %>% mutate(Date = as_date(Date))
food_v6
0.55*8+0.35*8.5+0.9
5+8
9*9+sqrt(9)
library(tidyverse)
mytheme = theme_bw()
theme_set(mytheme)
library(fosdata)
str(normtemp)
d <- normtemp %>%
mutate(temp_celcius=(temp-32)/1.8) %>%
mutate(gender=as.factor(gender)) %>%
mutate(gender=fct_recode(gender, male="1", female="2"))
d %>% ggplot(aes(x=temp)) + geom_boxplot()
d %>% ggplot(aes(x=temp)) + geom_histogram(colour='white')
d %>% ggplot(aes(x=temp_celcius)) + geom_boxplot()
d %>% ggplot(aes(x=temp_celcius)) + geom_histogram(colour='white')
t.test(d$temp_celcius, conf.level = .98)
mean(d$temp_celcius)
t.test(d$temp_celcius, conf.level = .9)
t.test(d$temp_celcius, conf.level = .8)
t.test(d$temp_celcius, mu=37)
?t.test
t.test(d$temp_celcius, mu=37, alternative="two.sided")
delta_seq <- seq(-3,3, by=0.01)
N <- length(delta_seq)
power <- rep(0,N)
for (i in 1:N){
power[i] <- power.t.test(
n = 130, delta = delta_seq[i], sd = 6.67,
sig.level = .05, type = "one.sample")$power
}
tibble(delta=delta_seq, power) %>% ggplot(aes(x=delta, y=power)) + geom_line()
power <- rep(0,N)
for (i in 1:N){
power[i] <- power.t.test(
n = 13000, delta = delta_seq[i], sd = 6.67,
sig.level = .05, type = "one.sample")$power
}
tibble(delta=delta_seq, power) %>% ggplot(aes(x=delta, y=power)) + geom_line()
power <- rep(0,N)
for (i in 1:N){
power[i] <- power.t.test(
n = 13, delta = delta_seq[i], sd = 6.67,
sig.level = .05, type = "one.sample")$power
}
tibble(delta=delta_seq, power) %>% ggplot(aes(x=delta, y=power)) + geom_line()
0.5/sqrt(6)
0.5/sqrt(1000)
library(fosdata)
fosdata::pres_election
?fosdata::pres_election
?fosdata::ecars
pnorm(-3)
60/175
70/175
(0.4-0.5)/ (0.5*(1-0.5)/175)^(1/2)
pnorm((0.4-0.5)/ (0.5*(1-0.5)/175)^(1/2))
matrix(c(20, 56, 34, 10, 20, 70), nrow=2, ncol=3)
matrix(c(20, 56, 34, 10, 20, 70), nrow=2, ncol=3)
?matrix
?matrix
matrix(c(20, 56, 34, 10, 20, 70), nrow=2, ncol=3, byrow=TRUE)
?chisq.test
a=matrix(c(20, 56, 34, 10, 20, 70), nrow=2, ncol=3, byrow=TRUE)
chisq.test(a, correct=FALSE)
a=matrix(c(20, 36, 34, 10, 20, 70), nrow=2, ncol=3, byrow=TRUE)
chisq.test(a, correct=FALSE)
A
z
a
((35-1)*0.97^2 + (36-1)*0.63^2)/(35+36-2)
aa=((35-1)*0.97^2 + (36-1)*0.63^2)/(35+36-2)
alpha <- 0.1; pt(alpha/2, df=69, lower.tail=FALSE) ( (1/35 + 1/36) * aa )^(1/2)
sp2=((35-1)*0.97^2 + (36-1)*0.63^2)/(35+36-2)
sp2=((35-1)*0.97^2 + (36-1)*0.63^2)/(35+36-2)
alpha <- 0.1
pt(alpha/2, df=69, lower.tail=FALSE) * ( (1/35 + 1/36) * sp2 )^(1/2)
sp2
sp2=0.5
pt(alpha/2, df=69, lower.tail=FALSE) * ( (1/35 + 1/36) * sp2 )^(1/2)
0.393*10.011/196.544
r=0.393
t = r*sqrt(38-2)/sqrt(1-r^2)
t
pval=2*pt(t, lower.tail=FALSE)
pval=2*pt(t, lower.tail=FALSE, df=36)
pval
n=6
s=0
(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=1;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=2;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=3;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=4;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=5;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
s=6;(pbeta(1, s+1, n-s+1) - pbeta(1/2, s+1, n-s+1))/pbeta(1/2,s+1,n-s+1)
1/0.29
1/0.07
1/0.06666667
1/0.2929293
1/0.2929293
14*8800
library(LMest)
?lmestformula
?lmestFormula
data(data_SRHS_long)
names(data_SRHS_long)
fm <- lmestFormula(data = data_SRHS_long,
response = "srhs",
LatentInitial = 3:6, LatentTransition = 3:6,
AddInterceptInitial = FALSE,AddInterceptTransition = FALSE)
fm
fit <- lmest(responsesFormula = fm$responsesFormula, latentFormula = fm$latentFormula)
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long)
str(data_SRHS_long)
?lmest
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long,
index = index = c("id","t"))
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long,
index = c("id","t"))
summary(fit)
fm <- lmestFormula(data = data_SRHS_long,
response = "srhs",
LatentInitial = 3:6, LatentTransition = 3:6,
AddInterceptInitial = FALSE, AddInterceptTransition = TRUE)
fm
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long,
index = c("id","t"))
summary(fit)
?lmest
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long,
index = c("id","t"),
paramLatent =  "difflogit" )
summary(fit)
fit <- lmest(responsesFormula = fm$responsesFormula,
latentFormula = fm$latentFormula,
data=data_SRHS_long,
index = c("id","t"))
summary(fit)
fm
fm <- lmestFormula(data = data_SRHS_long,
response = "srhs",
LatentInitial = 3:6, LatentTransition = 3:6,
AddInterceptInitial = FALSE, AddInterceptTransition = FALSE)
fm
library(tidyverse)
library(forecast)
library(ggpubr)
library(GGally)
setwd("~/.julia/dev/LatentMarkovQuest/examples/olympic")
theme_set(theme_bw())
library(readr)
iterates_full <- read_csv("figs/iterates.csv", col_types = cols(chain = col_character()))
#View(iterates)
iterates <- iterates_full %>% dplyr::select(1:31)
#ggpairs(iterates, mapping = aes(color = chain), columns = 3:20)
iterates_long <- pivot_longer(iterates, 3:31, names_to="parameter", values_to="value")
iterates_long %>% dplyr::filter(parameter %in%
c("σ²","γ12[1]", "γ12[2]","γ12[3]","γ12[4]","γ32[1]", "γ32[2]"    ,"γ32[3]"   ,"γ32[4]"    )) %>%
ggplot(aes(x=iteration, y=value, colour=chain)) + facet_wrap(~parameter,scales="free",ncol=2) + geom_line() + labs(y="")
iterates_long %>% dplyr::filter(parameter %in% c("Z1[1]","Z1[2]","Z1[3]","Z2[1]","Z2[2]","Z2[3]"  )) %>%
ggplot(aes(x=iteration, y=value, colour=chain)) + facet_wrap(~parameter,scales="free",nrow=2) + geom_line() + labs(y="")
posterior_summary <- read_csv("figs/posterior_summary.csv") %>%
mutate(type=c("sigma",
rep("from 1 to 2",4), rep("from 2 to 3",4), rep("from 2 to 1",4), rep("from 3 to 2",4),
rep("Z1",3), rep("Z2",3), rep("Z3",3), rep("Z4",3)    ))
posterior_summary <- posterior_summary %>% mutate(lower=mean-2*std, upper=mean+2*std)
posterior_summary %>% ggplot(aes(x=parameters, y=mean, colour=type)) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper)) +  coord_flip()
covariates = c("intercept", "sport","strength","competition")
posterior_summary %>% dplyr::filter(str_detect(parameters, "γ")) %>%
mutate(covariate=as.factor(rep(covariates,4))) %>%
covariates = c("intercept", "sport","strength","competition")
covariates = c("intercept", "sport","strength","competition")
posterior_summary %>% dplyr::filter(str_detect(parameters, "γ")) %>%
mutate(covariate=as.factor(rep(covariates,4))) %>%
#  mutate(covariate=fct_relevel(covariate), "intercept", "sport", "strength", "competition") %>%
ggplot(aes(x=parameters, y=mean, colour=covariate)) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper)) +
labs(x="parameter", y="") + geom_hline(aes(yintercept=0)) +
facet_wrap(~type,scales="free_y")+
theme( axis.text.y = element_blank())+
coord_flip() +
theme(legend.position = "bottom")
iterates_long %>% group_by(chain, parameter) %>% summarise(m = mean(value), s =sd(value)) %>%
ggplot(aes(y=parameter, x=m, colour=chain)) + geom_jitter(width=0.0, height=0.3) #+ facet_wrap(~parameter)
library(tidyverse)
library(forecast)
library(ggpubr)
library(GGally)
setwd("~/.julia/dev/LatentMarkovQuest/examples/olympic")
theme_set(theme_bw())
library(readr)
iterates_full <- read_csv("figs/iterates.csv", col_types = cols(chain = col_character()))
#View(iterates)
iterates <- iterates_full %>% dplyr::select(1:31)
#ggpairs(iterates, mapping = aes(color = chain), columns = 3:20)
iterates_long <- pivot_longer(iterates, 3:31, names_to="parameter", values_to="value")
iterates_long %>% dplyr::filter(parameter %in%
c("σ²","γ12[1]", "γ12[2]","γ12[3]","γ12[4]","γ32[1]", "γ32[2]"    ,"γ32[3]"   ,"γ32[4]"    )) %>%
ggplot(aes(x=iteration, y=value, colour=chain)) + facet_wrap(~parameter,scales="free",ncol=2) + geom_line() + labs(y="")
ggsave("figs/traceplots1.pdf", width=6, height=8)
iterates_long %>% dplyr::filter(parameter %in% c("Z1[1]","Z1[2]","Z1[3]","Z2[1]","Z2[2]","Z2[3]"  )) %>%
ggplot(aes(x=iteration, y=value, colour=chain)) + facet_wrap(~parameter,scales="free",nrow=2) + geom_line() + labs(y="")
ggsave("figs/traceplots1.pdf", width=6, height=8)
# df_acf <- iterates %>% group_by(chain) %>% reframe(acf=acf(`γup[1]`,plot=F)$acf, lag=acf(`γup[1]`,plot=F)$lag)
# df_acf %>% ggplot(aes(x=lag, y=acf)) +
#   geom_bar(stat = "identity", position = "identity") + facet_wrap(~chain)
posterior_summary <- read_csv("figs/posterior_summary.csv") %>%
mutate(type=c("sigma",
rep("from 1 to 2",4), rep("from 2 to 3",4), rep("from 2 to 1",4), rep("from 3 to 2",4),
rep("Z1",3), rep("Z2",3), rep("Z3",3), rep("Z4",3)    ))
posterior_summary <- posterior_summary %>% mutate(lower=mean-2*std, upper=mean+2*std)
pdf("figs/estimates.pdf")
posterior_summary %>% ggplot(aes(x=parameters, y=mean, colour=type)) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper)) +  coord_flip()
dev.off()
covariates = c("intercept", "sport","strength","competition")
posterior_summary %>% dplyr::filter(str_detect(parameters, "γ")) %>%
mutate(covariate=as.factor(rep(covariates,4))) %>%
#  mutate(covariate=fct_relevel(covariate), "intercept", "sport", "strength", "competition") %>%
ggplot(aes(x=parameters, y=mean, colour=covariate)) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper)) +
labs(x="parameter", y="") + geom_hline(aes(yintercept=0)) +
facet_wrap(~type,scales="free_y")+
theme( axis.text.y = element_blank())+
coord_flip() +
theme(legend.position = "bottom")
ggsave("figs/gamma_estimates.pdf")
iterates_long %>% group_by(chain, parameter) %>% summarise(m = mean(value), s =sd(value)) %>%
ggplot(aes(y=parameter, x=m, colour=chain)) + geom_jitter(width=0.0, height=0.3) #+ facet_wrap(~parameter)
posterior_summary %>% dplyr::filter(str_detect(parameters, "γ")) %>%
mutate(covariate=as.factor(rep(covariates,4))) %>%
#  mutate(covariate=fct_relevel(covariate), "intercept", "sport", "strength", "competition") %>%
ggplot(aes(x=parameters, y=mean, colour=covariate)) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper)) +
labs(x="parameter", y="") + geom_hline(aes(yintercept=0)) +
facet_wrap(~type,scales="free_y")+
theme( axis.text.y = element_blank())+
coord_flip() +
theme(legend.position = "bottom")
